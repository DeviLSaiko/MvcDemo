@using PagedList;
@using PagedList.Mvc;

@model IPagedList<OrdersProject.Orders>

<div class="row">
    <div class="col-md-6">
        <p>
            @Html.ActionLink("Add New", "CreateOrder", null, new { @class = "btn border" })
        </p>
    </div>

    <div class="col-md-6">
        @using (Html.BeginForm("OrdersList", "Orders", FormMethod.Get))
        {
            <div class="d-flex justify-content-end pb-3 ">
                <div class="order-1">
                    @Html.RadioButton("SearchBy", "ClientName") <label>ClientName </label>

                    @Html.RadioButton("SearchBy", "Status") <label>Status</label>
                </div>

                <div class="order-2 ps-2">
                    @Html.TextBox("Search", null, new { @class = "form-control shadow-none rounded-0", Style = "height:25px", placeholder = "Search Here...." })
                </div>


            </div>

        }

    </div>

</div>



@if (Model.Count() == 0)
{
    <td colspan="7"> No Data Found </td>

}
else
{
    <table class="table table-borderless">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.First().OrderID)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().ClientName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().OrderType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Qty)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().ETA_Time)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Created_Date)
            </th>
            <th>Action</th>
        </tr>

        @foreach (var item in Model)
        {

            using (Html.BeginForm("Delete", "Orders", new { id = item.OID }))
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.OrderID)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ClientName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.OrderType)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Qty)
                    </td>
                    <td style="height:50px;">
                        @Html.DisplayFor(modelItem => item.ETA_Time)
                    </td>
                    <td >

                        @if (item.Status == 1)
                        {
                            <span class="badge rounded-pill bg-secondary">Yet To Start</span>

                        }
                        else if (item.Status == 2)
                        {
                            <span class="badge rounded-pill bg-success "> In Progressing</span>
                        }
                        else if (item.Status == 3)
                        {
                            <span class="badge rounded-pill bg-warning ">On Hold</span>
                        }
                        else if (item.Status == 4)
                        {
                            <span class="badge rounded-pill bg-primary "> Finished</span>
                        }
                        else if (item.Status == 5)
                        {
                            <span class="badge rounded-pill bg-danger ">Cancelled</span>
                        }

                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Created_Date)
                    </td>
                    <td>
                        <div class="dropdown  ">
                            <button class="btn shadow-none py-0" type="button" data-bs-toggle="dropdown" aria-expanded="true">
                                <i class="fa fa-ellipsis-h" style="font-size:small" aria-hidden="true"></i>
                            </button>
                            <ul class="dropdown-menu fade shadow-sm  dropdown-menu-end">
                                <li>@Html.ActionLink("Edit", "UpdateOrder", new { id = item.OID }, new { @class = "dropdown-item" })</li>
                                <li>@Html.ActionLink("Details", "UpdateOrder", new { id = item.OID }, new { @class = "dropdown-item" })</li>
                                <li><button type="button" class="dropdown-item" data-bs-toggle="modal" data-bs-target="#myModal"> Delete</button></li> <!-- Button to Open the Modal -->
                            </ul>
                        </div>
                        <!-- The Modal -->
                        <div class="modal fade" id="myModal">
                            <div class="modal-dialog">
                                <div class="modal-content">

                                    <!-- Modal Header -->
                                    <div class="modal-header">
                                        <h4 class="modal-title"> Please Confirm</h4>
                                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                                    </div>

                                    <!-- Modal body -->
                                    <div class="modal-body">
                                        Do You Really Want To delete This Order ??
                                        <br />
                                        <label class="mt-3">OrderID : </label>  @item.OrderID  <br />
                                        <label class="mt-3">ClientName : </label>  @item.ClientName <br />
                                        <label class="mt-3">OrderType : </label>  @item.OrderType <br />
                                        <label class="mt-3">Qty : </label>  @item.Qty <br />

                                    </div>

                                    <!-- Modal footer -->
                                    <div class="modal-footer">
                                        <button type="submit" value="Delete" class="btn btn-danger" data-bs-dismiss="modal">Delete</button>
                                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                    </div>

                                </div>
                            </div>
                        </div>
                    </td>
                </tr>
            }
        }
    </table>
}
 
<div class="d-flex justify-content-center  ">
    @Html.PagedListPager(Model, page => Url.Action("OrdersList", new
{
    page,
    SearchBy = Request.QueryString["SearchBy"]
    ,
    Search = Request.QueryString["Search"]
}), new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded }

    )

</div>








